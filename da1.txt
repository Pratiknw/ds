import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')


df = pd.read_csv('boston.csv')
df

df.info()

df.shape

df.columns

df.describe()

df.isnull().sum()


fig, ax = plt.subplots(2, 7, figsize=(20, 10))
idx = 0
ax = ax.flatten()

for col, value in df.items():
    sns.boxplot(y=col, data=df, ax=ax[idx])
    idx += 1
plt.tight_layout(pad=0.5, w_pad=0.7, h_pad=5.0)

for column, val in df.items():
    q1 = val.quantile(0.25)
    q3 = val.quantile(0.75)
    iqr = q3 - q1
    v_col = val[(val <= q1 - 1.5 * iqr) | (val >= q3 + 1.5 * iqr)]
    perc = np.shape(v_col)[0] * 100.0 / np.shape(df)[0]
    print("Column %s outliers = %.2f%%" % (column, perc))


target = df['medv']
test = df

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(test,target,random_state=0,test_size=0.2)

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape)

from sklearn.linear_model import LinearRegression

regressor = LinearRegression()
regressor.fit(x_train,y_train)

y_pred = regressor.predict(x_test)

y_pred

from sklearn.metrics import mean_absolute_error,mean_squared_error

mse = mean_squared_error(y_test,y_pred)
mae = mean_absolute_error(y_test,y_pred)

print("Mean Squared Error : ",mse)
print("Mean Absolute Error : ",mae)
